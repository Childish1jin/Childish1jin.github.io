{"meta":{"title":"Barry's blog","subtitle":"Run!!!","description":"run barry, run!","author":"Barry Wang","url":"http://yoursite.com","root":"/"},"pages":[{"title":"����","date":"2019-07-12T08:22:33.000Z","updated":"2019-07-12T08:23:15.497Z","comments":true,"path":"categories/index.html","permalink":"http://yoursite.com/categories/index.html","excerpt":"","text":""},{"title":"��ǩ","date":"2019-07-12T08:26:06.000Z","updated":"2019-07-12T08:26:34.086Z","comments":true,"path":"tags/index.html","permalink":"http://yoursite.com/tags/index.html","excerpt":"","text":""},{"title":"about","date":"2019-07-12T08:27:37.000Z","updated":"2019-07-12T08:27:37.233Z","comments":true,"path":"about/index.html","permalink":"http://yoursite.com/about/index.html","excerpt":"","text":""}],"posts":[{"title":"","slug":"Google Colab使用 一","date":"2019-07-12T12:38:03.856Z","updated":"2019-07-12T12:38:04.567Z","comments":true,"path":"2019/07/12/Google Colab使用 一/","link":"","permalink":"http://yoursite.com/2019/07/12/Google Colab使用 一/","excerpt":"","text":"本地运行借助 Colaboratory，使用 Jupyter 连接到本地运行时 本机安装Jupyter 安装并启用jupyter_http_over_ws jupyter 扩展程序 12pip install jupyter_http_over_wsjupyter serverextension enable --py jupyter_http_over_ws 启动服务器并进行身份验证 1234jupyter notebook \\ --NotebookApp.allow_origin=&apos;https://colab.research.google.com&apos; \\ --port=8888 \\ --NotebookApp.port_retries=0 在 Colaboratory 中，点击“连接”按钮，然后选择“连接到本地运行时…”。在随即显示的对话框中输入上一步中的端口，然后点击“连接”按钮。完成此操作后，您应该就已经连接到本地运行时了。 Google Colab 123from google.colab import files files.upload()files.download()","categories":[],"tags":[]},{"title":"","slug":"Tips (2)","date":"2019-07-12T12:37:55.075Z","updated":"2019-07-12T12:37:55.840Z","comments":true,"path":"2019/07/12/Tips (2)/","link":"","permalink":"http://yoursite.com/2019/07/12/Tips (2)/","excerpt":"","text":"Ubuntu 18.01 重装mysql 删除mysql 123 #sudo apt autoremove mysql-server #sudo apt remove mysql-common#dpkg -l |grep ^rc|awk &apos;&#123;print $2&#125;&apos; |sudo xargs dpkg -P 安装 mysql 123#sudo apt install mysql-server#sudo apt install mysql-client#sudo apt install php5-mysql php和mysql连接 若提示Package has no installation candidate 123sudo apt-get update sudo apt install upgradesudo apt install php5-mysql","categories":[],"tags":[]},{"title":"","slug":"Google colab Tips2","date":"2019-07-12T12:37:34.227Z","updated":"2019-07-12T12:37:35.036Z","comments":true,"path":"2019/07/12/Google colab Tips2/","link":"","permalink":"http://yoursite.com/2019/07/12/Google colab Tips2/","excerpt":"","text":"挂载Drive 12from google.colab import drive drive.mount(&apos;/content/drive&apos;) 接着打开链接输入授权码 虚拟机文件下载 12from google.colab import files files.download(&apos;file&quot;) # 同理，file.upload()","categories":[],"tags":[]},{"title":"","slug":"Navicat Tips","date":"2019-07-12T12:37:25.251Z","updated":"2019-07-12T12:37:26.163Z","comments":true,"path":"2019/07/12/Navicat Tips/","link":"","permalink":"http://yoursite.com/2019/07/12/Navicat Tips/","excerpt":"","text":"Ubuntu18安装Navicat乱码解决办法 启动 ./start_navicat 解决字符乱码 12locale -a export LANG=zh_CN.utf8 软件内仍存在乱码解决办法工具—选项—常规—-界面字体 粘贴为Noto Sans Mono CJK TC Regular，保存并推出重启即可","categories":[],"tags":[]},{"title":"","slug":"Navicat Tips2    ERROR 1698 (28000)_ Access denied for user 'root'@'localhost'","date":"2019-07-12T12:37:15.179Z","updated":"2019-07-12T12:37:15.917Z","comments":true,"path":"2019/07/12/Navicat Tips2    ERROR 1698 (28000)_ Access denied for user 'root'@'localhost'/","link":"","permalink":"http://yoursite.com/2019/07/12/Navicat Tips2    ERROR 1698 (28000)_ Access denied for user 'root'@'localhost'/","excerpt":"","text":"ERROR 1698 (28000): Access denied for user ‘root’@’localhost’转载自学习 进入以下文件1sudo vim /etc/mysql/mysql.conf.d/mysqld.cnf 在如下位置，加入skip-grant-tables保存并退出。 重启mysqlservice mysql restart 重新进入mysql 1mysql -u root -p 123use mysql;update user set authentication_string=password(”你的密码“）where user=&quot;root&quot;;flush privileges; 再次进入mysql 12service mysql restartmysql -u root -p 如下修改 12use mysql;select user,plugin from user; 从图中可以看到在执行了select user,plugin from user后，错误原因是因为plugin root的字段是auth_socket，那我们改掉它为下面的mysql_native_password就行了。 12update user set authentication_string=password(&apos;你的密码&apos;),plugin=&apos;mysql_natice_password&apos; where user=&apos;root&apos;;select user,plugin from user; 此时有 最后注释掉之前的输入 1sudo vim /etc/mysql/mysql.conf.d/mysqld.cnf 此时即可正常进入mysql 1mysql -u root -p","categories":[],"tags":[]},{"title":"","slug":"Mysql学习记录","date":"2019-07-12T12:37:04.427Z","updated":"2019-07-12T12:37:05.135Z","comments":true,"path":"2019/07/12/Mysql学习记录/","link":"","permalink":"http://yoursite.com/2019/07/12/Mysql学习记录/","excerpt":"","text":"mysql (内连接，外连接，左连接，右连接，自连接）学习记录 内连接只显示连接过程中交叉的部分 select * from A a inner join B b on a.id = b.id 左连接右连接同属于外连接 select * from A a left join B b on a.id = b.id -- 显示左表全部记录以及左右表同时存在的记录 `select * from A a right join B b on a.id = b.id -- 显示右表全部记录以及左右表同时存在的记录` 为现有表添加主键 alter table my_contacts add column contact_id int not null auto_increment first, add primary key (contact_id); 使用CASE表达式来Updateupdate movie_tableset category =casewhen drama = &#39;T&#39; then &#39;drama&#39;when comedy = &#39;T&#39; then &#39;comedy&#39;else &#39;miscend;","categories":[],"tags":[]},{"title":"","slug":"Tips (1)","date":"2019-07-12T12:36:54.955Z","updated":"2019-07-12T12:36:55.683Z","comments":true,"path":"2019/07/12/Tips (1)/","link":"","permalink":"http://yoursite.com/2019/07/12/Tips (1)/","excerpt":"","text":"pymongo api 1234sheet_weather.update_one(&#123;&apos;_id&apos;: item[&apos;_id&apos;]&#125;, &#123;&apos;$set&apos;: &#123;&apos;HeWeather6.0.daily_forecast.&#123;&#125;.tmp_min&apos;.format(i): int(tmp)&#125;&#125;)sheet_weather.find_one_and_delete(&#123;&apos;_id&apos;:item[&apos;_id&apos;]&#125;,&#123;&apos;HeWeather6.0.daily_forecast.&#123;&#125;.tmp_min&apos;&#125;) {‘_id’: item[‘_id’]}表示需要更新的查询条件，对应_id字段。第二个参数表示要更新的信息，$set 为MongoDB的一个修改器，用于指定一个键并更新键值，若键不存在则创建一个键 常用的修改器还有： $inc 可以对文档的某个值为数字型的键进行增减操作 $unset 用于删除键 $push向文档的某个数组类型的键添加一个数组元素，不过滤重复的数据。添加时，若键存在，则要求键值类型必须为数组；若键不存在，则创建数组类型的键 {&#39;$set&#39;: {&#39;HeWeather6.0.daily_forecast.{}.tmp_min&#39;.format(i): int(tmp)}} url = &#39;https://free-api.heweather.net/s6/weather/forecast?location=&#39;+item[1:14]+&#39;&amp;key=aaaaaaaaaaaaa可以写成 1url = &apos;https://free-api.heweather.net/s6/weather/forecast?location=&#123;&#125;&amp;key=aaaa&apos;.format(item[1:14])","categories":[],"tags":[]},{"title":"","slug":"用API爬取天气预报数据","date":"2019-07-12T12:36:41.180Z","updated":"2019-07-12T12:36:41.972Z","comments":true,"path":"2019/07/12/用API爬取天气预报数据/","link":"","permalink":"http://yoursite.com/2019/07/12/用API爬取天气预报数据/","excerpt":"","text":"123456789101112131415161718192021222324252627282930313233import requestsimport numpyimport reimport time# 加载pymongoimport pymongoclient = pymongo.MongoClient(&apos;localhost&apos;,27017)book_weather = client[&apos;weather&apos;]sheet_weather = book_weather[&apos;sheet_weather_3&apos;]url = &apos;https://cdn.heweather.com/china-city-list.txt&apos;strhtml = requests.get(url)strhtml.encoding = &apos;utf-8&apos;data = strhtml.textdata1 = data.split(&apos;\\n&apos;)for i in range(6): data1.remove(data1[0])for item in data1: # url = &apos;https://free-api.weather.com/v5/forecast?city=&apos;+ item[0:11] +&apos;&amp;key=yourownkey&apos; url = &apos;https://free-api.heweather.net/s6/weather/forecast?location=&#123;&#125;&amp;key=yourownkey&apos;.format(item[1:14]) strhtml = requests.get(url) # print(strhtml) time.sleep(1) dic = strhtml.json() # 向表写入一条数据 sheet_weather.insert_one(dic)import pymongoclient = pymongo.MongoClient(&apos;localhost&apos;,27017)book_weather = client[&apos;weather&apos;]sheet_weather = book_weather[&apos;sheet_weather_3&apos;] 查询未来三天最低气温低于5度的地点 123456789101112131415import pymongoclient = pymongo.MongoClient(&apos;localhost&apos;,27017)book_weather = client[&apos;weather&apos;]sheet_weather = book_weather[&apos;sheet_weather_3&apos;]for item in sheet_weather.find(): for i in range(3): tmp = item[&apos;HeWeather6&apos;][0][&apos;daily_forecast&apos;][i][&apos;tmp_min&apos;] sheet_weather.update_one(&#123;&apos;_id&apos;: item[&apos;_id&apos;]&#125;, &#123;&apos;$set&apos;: &#123;&apos;HeWeather6.0.daily_forecast.&#123;&#125;.tmp_min&apos;.format(i): int(tmp)&#125;&#125;) #sheet_weather.find_one_and_delete(&#123;&apos;_id&apos;:item[&apos;_id&apos;]&#125;,&#123;&apos;HeWeather6.0.daily_forecast.&#123;&#125;.tmp_min&apos;&#125;)for item in sheet_weather.find(&#123;&apos;HeWeather6.0.daily_forecast.tmp_min&apos;:&#123;&apos;$gt&apos;:5&#125;&#125;): print(item[&apos;HeWeather6&apos;][0][&apos;basic&apos;][&apos;location&apos;]) $lt, $lte, $gt, $gte 分别表示&lt; , &lt;=, &gt;, &gt;=","categories":[],"tags":[]},{"title":"","slug":"Tips","date":"2019-07-12T12:36:31.572Z","updated":"2019-07-12T12:36:32.295Z","comments":true,"path":"2019/07/12/Tips/","link":"","permalink":"http://yoursite.com/2019/07/12/Tips/","excerpt":"","text":"以癌症预测为例 0:恶性，1:良性 TP： 真正例，良性被正确预测 TN：真反例，恶性被正确预测 FP：假正例，恶性被预测为良性 FN：假反例，良性被预测为恶性 Accuracy:准确率（TP+TN）/（TP+TN+FP+FN）Precision:查准率 TP/(TP+FP)Recall:查全率 TP/(TP+FN) 12345678import numpy as np arr = np.arange(12).reshape(3,4)print(arr)a = arr[:,::2]print(a)b = arr[::1,:]print(b) 123456789[[ 0 1 2 3] [ 4 5 6 7] [ 8 9 10 11]][[ 0 2] [ 4 6] [ 8 10]][[ 0 1 2 3] [ 4 5 6 7] [ 8 9 10 11]]","categories":[],"tags":[]},{"title":"","slug":"T","date":"2019-07-12T12:36:10.659Z","updated":"2019-07-12T12:36:13.088Z","comments":true,"path":"2019/07/12/T/","link":"","permalink":"http://yoursite.com/2019/07/12/T/","excerpt":"","text":"operator.itemgetter operator 12sorted = sorted(data,key = operator.itemgetter(n))---operator.itemgetter(n)返回位置n上的元素 zip `np.c_ np.r_ np.meshgrid` x = np.arange(1,3,1) y = np.arange(4,8,1) xx,yy = np.meshgrid(x,y) print(xx,yy ) print(xx.ravel()) print(yy.ravel()) 1234567891011121314151617x = np.linespace(1,10,10)y = np.linespace(2,8,6)x1,x2 = np.meshgrid(x,y) #返回list,有两个元素,第一个元素是X轴的取值,第二个元素是Y轴的取值》》》[[ 1. 2. 3. 4. 5. 6. 7. 8. 9. 10.] [ 1. 2. 3. 4. 5. 6. 7. 8. 9. 10.] [ 1. 2. 3. 4. 5. 6. 7. 8. 9. 10.] [ 1. 2. 3. 4. 5. 6. 7. 8. 9. 10.] [ 1. 2. 3. 4. 5. 6. 7. 8. 9. 10.] [ 1. 2. 3. 4. 5. 6. 7. 8. 9. 10.] [ 1. 2. 3. 4. 5. 6. 7. 8. 9. 10.]] [[2. 2. 2. 2. 2. 2. 2. 2. 2. 2.] [3. 3. 3. 3. 3. 3. 3. 3. 3. 3.] [4. 4. 4. 4. 4. 4. 4. 4. 4. 4.] [5. 5. 5. 5. 5. 5. 5. 5. 5. 5.] [6. 6. 6. 6. 6. 6. 6. 6. 6. 6.] [7. 7. 7. 7. 7. 7. 7. 7. 7. 7.] [8. 8. 8. 8. 8. 8. 8. 8. 8. 8.]] pandas 计算偏度和峰度1234567891011121314%matplotlib inlineimport pandas as pdfrom sklearn.datasets import load_iris import matplotlib.pyplot as pltimport seaborn as snsiris = load_iris()x = iris.datay = iris.targetxx.columnsprint(&quot;鸢尾花长度的偏度：%f&quot; % xx[&apos;sepal length (cm)&apos;].skew())print(&quot;鸢尾花长度的峰度：%f&quot; % xx[&apos;sepal length (cm)&apos;].kurt())","categories":[],"tags":[]},{"title":"MNIST数据集的读取","slug":"MNIST数据集的读取","date":"2019-07-12T03:38:04.442Z","updated":"2019-07-12T08:27:18.471Z","comments":true,"path":"2019/07/12/MNIST数据集的读取/","link":"","permalink":"http://yoursite.com/2019/07/12/MNIST数据集的读取/","excerpt":"","text":"下载MNIST 数据集，并保存到home/wang/文档/Linux_python/ML/Python_ml test/MNIST_data/mldata文件夹下123456789101112from sklearn.datasets import fetch_mldatamnist = fetch_mldata(&apos;mnist-original&apos;, data_home = &apos;/home/wang/文档/Linux_python/ML/Python_ml test/MNIST_data&apos;)X = mnist[&apos;data&apos;]y = mnist[&apos;target&apos;]print(X)print(y)from sklearn.model_selection import train_test_splitX_train,X_test,y_train,y_test = train_test_split(X,y)","categories":[{"name":"Machine Learning","slug":"Machine-Learning","permalink":"http://yoursite.com/categories/Machine-Learning/"}],"tags":[{"name":"ML","slug":"ML","permalink":"http://yoursite.com/tags/ML/"}]},{"title":"Hello World","slug":"hello-world","date":"2019-07-12T02:06:54.964Z","updated":"2019-07-12T02:06:54.964Z","comments":true,"path":"2019/07/12/hello-world/","link":"","permalink":"http://yoursite.com/2019/07/12/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}