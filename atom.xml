<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Barry&#39;s blog</title>
  
  <subtitle>Run!!!</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-08-05T02:55:42.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Barry Wang</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2019/08/05/Chapter2/"/>
    <id>http://yoursite.com/2019/08/05/Chapter2/</id>
    <published>2019-08-05T02:57:02.180Z</published>
    <updated>2019-08-05T02:55:42.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="特征理解"><a href="#特征理解" class="headerlink" title="特征理解"></a>特征理解</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt </span><br><span class="line"><span class="keyword">import</span> seaborn <span class="keyword">as</span> sns </span><br><span class="line">%matplotlib inline </span><br><span class="line">plt.style.use(<span class="string">'fivethirtyeight'</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">salary_ranges = pd.read_csv(<span class="string">'Salary_Ranges_by_Job_Classification.csv'</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">salary_ranges.head()</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>SetID</th>      <th>Job Code</th>      <th>Eff Date</th>      <th>Sal End Date</th>      <th>Salary SetID</th>      <th>Sal Plan</th>      <th>Grade</th>      <th>Step</th>      <th>Biweekly High Rate</th>      <th>Biweekly Low Rate</th>      <th>Union Code</th>      <th>Extended Step</th>      <th>Pay Type</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>COMMN</td>      <td>0109</td>      <td>07/01/2009 12:00:00 AM</td>      <td>06/30/2010 12:00:00 AM</td>      <td>COMMN</td>      <td>SFM</td>      <td>00000</td>      <td>1</td>      <td>$0.00</td>      <td>$0.00</td>      <td>330</td>      <td>0</td>      <td>C</td>    </tr>    <tr>      <th>1</th>      <td>COMMN</td>      <td>0110</td>      <td>07/01/2009 12:00:00 AM</td>      <td>06/30/2010 12:00:00 AM</td>      <td>COMMN</td>      <td>SFM</td>      <td>00000</td>      <td>1</td>      <td>$15.00</td>      <td>$15.00</td>      <td>323</td>      <td>0</td>      <td>D</td>    </tr>    <tr>      <th>2</th>      <td>COMMN</td>      <td>0111</td>      <td>07/01/2009 12:00:00 AM</td>      <td>06/30/2010 12:00:00 AM</td>      <td>COMMN</td>      <td>SFM</td>      <td>00000</td>      <td>1</td>      <td>$25.00</td>      <td>$25.00</td>      <td>323</td>      <td>0</td>      <td>D</td>    </tr>    <tr>      <th>3</th>      <td>COMMN</td>      <td>0112</td>      <td>07/01/2009 12:00:00 AM</td>      <td>06/30/2010 12:00:00 AM</td>      <td>COMMN</td>      <td>SFM</td>      <td>00000</td>      <td>1</td>      <td>$50.00</td>      <td>$50.00</td>      <td>323</td>      <td>0</td>      <td>D</td>    </tr>    <tr>      <th>4</th>      <td>COMMN</td>      <td>0114</td>      <td>07/01/2009 12:00:00 AM</td>      <td>06/30/2010 12:00:00 AM</td>      <td>COMMN</td>      <td>SFM</td>      <td>00000</td>      <td>1</td>      <td>$100.00</td>      <td>$100.00</td>      <td>323</td>      <td>0</td>      <td>M</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">salary_ranges.columns</span><br></pre></td></tr></table></figure><pre><code>Index([&apos;SetID&apos;, &apos;Job Code&apos;, &apos;Eff Date&apos;, &apos;Sal End Date&apos;, &apos;Salary SetID&apos;,       &apos;Sal Plan&apos;, &apos;Grade&apos;, &apos;Step&apos;, &apos;Biweekly High Rate&apos;, &apos;Biweekly Low Rate&apos;,       &apos;Union Code&apos;, &apos;Extended Step&apos;, &apos;Pay Type&apos;],      dtype=&apos;object&apos;)</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">salary_ranges.info()</span><br></pre></td></tr></table></figure><pre><code>&lt;class &apos;pandas.core.frame.DataFrame&apos;&gt;RangeIndex: 1356 entries, 0 to 1355Data columns (total 13 columns):SetID                 1356 non-null objectJob Code              1356 non-null objectEff Date              1356 non-null objectSal End Date          1356 non-null objectSalary SetID          1356 non-null objectSal Plan              1356 non-null objectGrade                 1356 non-null objectStep                  1356 non-null int64Biweekly High Rate    1356 non-null objectBiweekly Low Rate     1356 non-null objectUnion Code            1356 non-null int64Extended Step         1356 non-null int64Pay Type              1356 non-null objectdtypes: int64(3), object(10)memory usage: 137.8+ KB</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">salary_ranges.isnull().sum()</span><br></pre></td></tr></table></figure><pre><code>SetID                 0Job Code              0Eff Date              0Sal End Date          0Salary SetID          0Sal Plan              0Grade                 0Step                  0Biweekly High Rate    0Biweekly Low Rate     0Union Code            0Extended Step         0Pay Type              0dtype: int64</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">salary_ranges.describe()</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>Step</th>      <th>Union Code</th>      <th>Extended Step</th>    </tr>  </thead>  <tbody>    <tr>      <th>count</th>      <td>1356.000000</td>      <td>1356.000000</td>      <td>1356.000000</td>    </tr>    <tr>      <th>mean</th>      <td>1.294985</td>      <td>392.676991</td>      <td>0.150442</td>    </tr>    <tr>      <th>std</th>      <td>1.045816</td>      <td>338.100562</td>      <td>1.006734</td>    </tr>    <tr>      <th>min</th>      <td>1.000000</td>      <td>1.000000</td>      <td>0.000000</td>    </tr>    <tr>      <th>25%</th>      <td>1.000000</td>      <td>21.000000</td>      <td>0.000000</td>    </tr>    <tr>      <th>50%</th>      <td>1.000000</td>      <td>351.000000</td>      <td>0.000000</td>    </tr>    <tr>      <th>75%</th>      <td>1.000000</td>      <td>790.000000</td>      <td>0.000000</td>    </tr>    <tr>      <th>max</th>      <td>5.000000</td>      <td>990.000000</td>      <td>11.000000</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">salary_ranges[[<span class="string">'Biweekly High Rate'</span>,<span class="string">'Grade'</span>]]</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>Biweekly High Rate</th>      <th>Grade</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>$0.00</td>      <td>00000</td>    </tr>    <tr>      <th>1</th>      <td>$15.00</td>      <td>00000</td>    </tr>    <tr>      <th>2</th>      <td>$25.00</td>      <td>00000</td>    </tr>    <tr>      <th>3</th>      <td>$50.00</td>      <td>00000</td>    </tr>    <tr>      <th>4</th>      <td>$100.00</td>      <td>00000</td>    </tr>    <tr>      <th>5</th>      <td>$100.00</td>      <td>00000</td>    </tr>    <tr>      <th>6</th>      <td>$200.00</td>      <td>00000</td>    </tr>    <tr>      <th>7</th>      <td>$500.00</td>      <td>00000</td>    </tr>    <tr>      <th>8</th>      <td>$0.00</td>      <td>00000</td>    </tr>    <tr>      <th>9</th>      <td>$10630.00</td>      <td>0140F</td>    </tr>    <tr>      <th>10</th>      <td>$9175.00</td>      <td>0150F</td>    </tr>    <tr>      <th>11</th>      <td>$4142.00</td>      <td>0170F</td>    </tr>    <tr>      <th>12</th>      <td>$5242.00</td>      <td>0180F</td>    </tr>    <tr>      <th>13</th>      <td>$3293.00</td>      <td>0190F</td>    </tr>    <tr>      <th>14</th>      <td>$4496.00</td>      <td>0380F</td>    </tr>    <tr>      <th>15</th>      <td>$4676.00</td>      <td>0381F</td>    </tr>    <tr>      <th>16</th>      <td>$4762.00</td>      <td>0382F</td>    </tr>    <tr>      <th>17</th>      <td>$11255.00</td>      <td>0390F</td>    </tr>    <tr>      <th>18</th>      <td>$10376.00</td>      <td>0395F</td>    </tr>    <tr>      <th>19</th>      <td>$9096.00</td>      <td>0400F</td>    </tr>    <tr>      <th>20</th>      <td>$9456.00</td>      <td>0401F</td>    </tr>    <tr>      <th>21</th>      <td>$9641.00</td>      <td>0402F</td>    </tr>    <tr>      <th>22</th>      <td>$7392.00</td>      <td>0488F</td>    </tr>    <tr>      <th>23</th>      <td>$7687.00</td>      <td>0489F</td>    </tr>    <tr>      <th>24</th>      <td>$7835.00</td>      <td>0490F</td>    </tr>    <tr>      <th>25</th>      <td>$3794.62</td>      <td>0720F</td>    </tr>    <tr>      <th>26</th>      <td>$1326.00</td>      <td>05475</td>    </tr>    <tr>      <th>27</th>      <td>$1425.00</td>      <td>05625</td>    </tr>    <tr>      <th>28</th>      <td>$1532.00</td>      <td>05775</td>    </tr>    <tr>      <th>29</th>      <td>$1646.00</td>      <td>05925</td>    </tr>    <tr>      <th>...</th>      <td>...</td>      <td>...</td>    </tr>    <tr>      <th>1326</th>      <td>$4857.00</td>      <td>Q37H0</td>    </tr>    <tr>      <th>1327</th>      <td>$4586.00</td>      <td>Q50H0</td>    </tr>    <tr>      <th>1328</th>      <td>$4770.00</td>      <td>Q51H0</td>    </tr>    <tr>      <th>1329</th>      <td>$4857.00</td>      <td>Q52H0</td>    </tr>    <tr>      <th>1330</th>      <td>$5237.00</td>      <td>Q60H0</td>    </tr>    <tr>      <th>1331</th>      <td>$5445.00</td>      <td>Q61H0</td>    </tr>    <tr>      <th>1332</th>      <td>$5548.00</td>      <td>Q62H0</td>    </tr>    <tr>      <th>1333</th>      <td>$6616.00</td>      <td>Q80H0</td>    </tr>    <tr>      <th>1334</th>      <td>$6881.00</td>      <td>Q81H0</td>    </tr>    <tr>      <th>1335</th>      <td>$7011.00</td>      <td>Q82H0</td>    </tr>    <tr>      <th>1336</th>      <td>$6515.00</td>      <td>Q90H0</td>    </tr>    <tr>      <th>1337</th>      <td>$2178.00</td>      <td>06500</td>    </tr>    <tr>      <th>1338</th>      <td>$2342.00</td>      <td>06650</td>    </tr>    <tr>      <th>1339</th>      <td>$2700.00</td>      <td>06940</td>    </tr>    <tr>      <th>1340</th>      <td>$2354.00</td>      <td>06660</td>    </tr>    <tr>      <th>1341</th>      <td>$3234.00</td>      <td>07310</td>    </tr>    <tr>      <th>1342</th>      <td>$1909.00</td>      <td>06230</td>    </tr>    <tr>      <th>1343</th>      <td>$2332.00</td>      <td>06640</td>    </tr>    <tr>      <th>1344</th>      <td>$2459.00</td>      <td>06750</td>    </tr>    <tr>      <th>1345</th>      <td>$2354.00</td>      <td>06660</td>    </tr>    <tr>      <th>1346</th>      <td>$3199.00</td>      <td>07290</td>    </tr>    <tr>      <th>1347</th>      <td>$3426.00</td>      <td>07430</td>    </tr>    <tr>      <th>1348</th>      <td>$3689.00</td>      <td>07580</td>    </tr>    <tr>      <th>1349</th>      <td>$1951.00</td>      <td>06275</td>    </tr>    <tr>      <th>1350</th>      <td>$2786.00</td>      <td>07005</td>    </tr>    <tr>      <th>1351</th>      <td>$2145.00</td>      <td>06470</td>    </tr>    <tr>      <th>1352</th>      <td>$3041.00</td>      <td>07185</td>    </tr>    <tr>      <th>1353</th>      <td>$3132.00</td>      <td>07245</td>    </tr>    <tr>      <th>1354</th>      <td>$3453.00</td>      <td>07445</td>    </tr>    <tr>      <th>1355</th>      <td>$3453.00</td>      <td>07445</td>    </tr>  </tbody></table><p>1356 rows × 2 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">salary_ranges[<span class="string">'Biweekly High Rate'</span>] = salary_ranges[<span class="string">'Biweekly High Rate'</span>].map(<span class="keyword">lambda</span> x : x.replace(<span class="string">'$'</span>,<span class="string">''</span>))</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">salary_ranges[<span class="string">'Biweekly High Rate'</span>]</span><br></pre></td></tr></table></figure><pre><code>0           0.001          15.002          25.003          50.004         100.005         100.006         200.007         500.008           0.009       10630.0010       9175.0011       4142.0012       5242.0013       3293.0014       4496.0015       4676.0016       4762.0017      11255.0018      10376.0019       9096.0020       9456.0021       9641.0022       7392.0023       7687.0024       7835.0025       3794.6226       1326.0027       1425.0028       1532.0029       1646.00          ...   1326     4857.001327     4586.001328     4770.001329     4857.001330     5237.001331     5445.001332     5548.001333     6616.001334     6881.001335     7011.001336     6515.001337     2178.001338     2342.001339     2700.001340     2354.001341     3234.001342     1909.001343     2332.001344     2459.001345     2354.001346     3199.001347     3426.001348     3689.001349     1951.001350     2786.001351     2145.001352     3041.001353     3132.001354     3453.001355     3453.00Name: Biweekly High Rate, Length: 1356, dtype: object</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">salary_ranges[<span class="string">'Biweekly High Rate'</span>] = salary_ranges[<span class="string">'Biweekly High Rate'</span>].astype(float)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">salary_ranges[<span class="string">'Grade'</span>] = salary_ranges[<span class="string">'Grade'</span>].astype(str)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">salary_ranges.head()</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>SetID</th>      <th>Job Code</th>      <th>Eff Date</th>      <th>Sal End Date</th>      <th>Salary SetID</th>      <th>Sal Plan</th>      <th>Grade</th>      <th>Step</th>      <th>Biweekly High Rate</th>      <th>Biweekly Low Rate</th>      <th>Union Code</th>      <th>Extended Step</th>      <th>Pay Type</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>COMMN</td>      <td>0109</td>      <td>07/01/2009 12:00:00 AM</td>      <td>06/30/2010 12:00:00 AM</td>      <td>COMMN</td>      <td>SFM</td>      <td>00000</td>      <td>1</td>      <td>0.0</td>      <td>$0.00</td>      <td>330</td>      <td>0</td>      <td>C</td>    </tr>    <tr>      <th>1</th>      <td>COMMN</td>      <td>0110</td>      <td>07/01/2009 12:00:00 AM</td>      <td>06/30/2010 12:00:00 AM</td>      <td>COMMN</td>      <td>SFM</td>      <td>00000</td>      <td>1</td>      <td>15.0</td>      <td>$15.00</td>      <td>323</td>      <td>0</td>      <td>D</td>    </tr>    <tr>      <th>2</th>      <td>COMMN</td>      <td>0111</td>      <td>07/01/2009 12:00:00 AM</td>      <td>06/30/2010 12:00:00 AM</td>      <td>COMMN</td>      <td>SFM</td>      <td>00000</td>      <td>1</td>      <td>25.0</td>      <td>$25.00</td>      <td>323</td>      <td>0</td>      <td>D</td>    </tr>    <tr>      <th>3</th>      <td>COMMN</td>      <td>0112</td>      <td>07/01/2009 12:00:00 AM</td>      <td>06/30/2010 12:00:00 AM</td>      <td>COMMN</td>      <td>SFM</td>      <td>00000</td>      <td>1</td>      <td>50.0</td>      <td>$50.00</td>      <td>323</td>      <td>0</td>      <td>D</td>    </tr>    <tr>      <th>4</th>      <td>COMMN</td>      <td>0114</td>      <td>07/01/2009 12:00:00 AM</td>      <td>06/30/2010 12:00:00 AM</td>      <td>COMMN</td>      <td>SFM</td>      <td>00000</td>      <td>1</td>      <td>100.0</td>      <td>$100.00</td>      <td>323</td>      <td>0</td>      <td>M</td>    </tr>  </tbody></table></div><h1 id="定类等级"><a href="#定类等级" class="headerlink" title="定类等级"></a>定类等级</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">salary_ranges[<span class="string">'Grade'</span>].value_counts().head()</span><br></pre></td></tr></table></figure><pre><code>00000    6107450    1206870     907420     907170     9Name: Grade, dtype: int64</code></pre><ul><li>柱状图</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">salary_ranges[<span class="string">'Grade'</span>].value_counts().sort_values(ascending = <span class="literal">False</span>).head(<span class="number">20</span>).plot(kind = <span class="string">'bar'</span>);</span><br></pre></td></tr></table></figure><p><img src="output_17_0.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">salary_ranges[<span class="string">'Grade'</span>].value_counts().sort_values(ascending = <span class="literal">False</span>).head(<span class="number">5</span>).plot(kind = <span class="string">'pie'</span>);</span><br></pre></td></tr></table></figure><p><img src="output_18_0.png" alt="png"></p><h1 id="定序等级"><a href="#定序等级" class="headerlink" title="定序等级"></a>定序等级</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">!cd</span><br></pre></td></tr></table></figure><pre><code>E:\Python\特征工程入门与实践</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">customer = pd.read_csv(<span class="string">'data/2013_SFO_Customer_survey.csv'</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">customer.shape</span><br></pre></td></tr></table></figure><pre><code>(3535, 95)</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">art_ratings = customer[<span class="string">'Q7A_ART'</span>]</span><br><span class="line">art_ratings.describe()</span><br></pre></td></tr></table></figure><pre><code>count    3535.000000mean        4.300707std         1.341445min         0.00000025%         3.00000050%         4.00000075%         5.000000max         6.000000Name: Q7A_ART, dtype: float64</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">art_ratings = art_ratings[(art_ratings &gt; <span class="number">1</span>) &amp; (art_ratings &lt;= <span class="number">5</span>)]</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">art_ratings = art_ratings.astype(str)</span><br><span class="line">art_ratings.describe()</span><br></pre></td></tr></table></figure><pre><code>count     2636unique       4top          4freq      1066Name: Q7A_ART, dtype: object</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">art_ratings.value_counts().plot(kind = <span class="string">'pie'</span>);</span><br></pre></td></tr></table></figure><p><img src="output_26_0.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">art_ratings.value_counts().plot(kind = <span class="string">'bar'</span>);</span><br></pre></td></tr></table></figure><p><img src="output_27_0.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">art_ratings.value_counts().plot(kind = <span class="string">'box'</span>);</span><br></pre></td></tr></table></figure><p><img src="output_28_0.png" alt="png"></p><h1 id="定序等级-1"><a href="#定序等级-1" class="headerlink" title="定序等级"></a>定序等级</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">climate = pd.read_csv(<span class="string">'data/GlobalLandTemperaturesByCity.csv'</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">climate.head()</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>dt</th>      <th>AverageTemperature</th>      <th>AverageTemperatureUncertainty</th>      <th>City</th>      <th>Country</th>      <th>Latitude</th>      <th>Longitude</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>1743-11-01</td>      <td>6.068</td>      <td>1.737</td>      <td>Århus</td>      <td>Denmark</td>      <td>57.05N</td>      <td>10.33E</td>    </tr>    <tr>      <th>1</th>      <td>1743-12-01</td>      <td>NaN</td>      <td>NaN</td>      <td>Århus</td>      <td>Denmark</td>      <td>57.05N</td>      <td>10.33E</td>    </tr>    <tr>      <th>2</th>      <td>1744-01-01</td>      <td>NaN</td>      <td>NaN</td>      <td>Århus</td>      <td>Denmark</td>      <td>57.05N</td>      <td>10.33E</td>    </tr>    <tr>      <th>3</th>      <td>1744-02-01</td>      <td>NaN</td>      <td>NaN</td>      <td>Århus</td>      <td>Denmark</td>      <td>57.05N</td>      <td>10.33E</td>    </tr>    <tr>      <th>4</th>      <td>1744-03-01</td>      <td>NaN</td>      <td>NaN</td>      <td>Århus</td>      <td>Denmark</td>      <td>57.05N</td>      <td>10.33E</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 移除缺失值</span></span><br><span class="line">climate.dropna(axis = <span class="number">0</span>, inplace = <span class="literal">True</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">climate.head()</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>dt</th>      <th>AverageTemperature</th>      <th>AverageTemperatureUncertainty</th>      <th>City</th>      <th>Country</th>      <th>Latitude</th>      <th>Longitude</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>1743-11-01</td>      <td>6.068</td>      <td>1.737</td>      <td>Århus</td>      <td>Denmark</td>      <td>57.05N</td>      <td>10.33E</td>    </tr>    <tr>      <th>5</th>      <td>1744-04-01</td>      <td>5.788</td>      <td>3.624</td>      <td>Århus</td>      <td>Denmark</td>      <td>57.05N</td>      <td>10.33E</td>    </tr>    <tr>      <th>6</th>      <td>1744-05-01</td>      <td>10.644</td>      <td>1.283</td>      <td>Århus</td>      <td>Denmark</td>      <td>57.05N</td>      <td>10.33E</td>    </tr>    <tr>      <th>7</th>      <td>1744-06-01</td>      <td>14.051</td>      <td>1.347</td>      <td>Århus</td>      <td>Denmark</td>      <td>57.05N</td>      <td>10.33E</td>    </tr>    <tr>      <th>8</th>      <td>1744-07-01</td>      <td>16.082</td>      <td>1.396</td>      <td>Århus</td>      <td>Denmark</td>      <td>57.05N</td>      <td>10.33E</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">climate.isnull().sum()</span><br></pre></td></tr></table></figure><pre><code>dt                               0AverageTemperature               0AverageTemperatureUncertainty    0City                             0Country                          0Latitude                         0Longitude                        0dtype: int64</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">climate[<span class="string">'AverageTemperature'</span>].hist();</span><br></pre></td></tr></table></figure><p><img src="output_35_0.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">climate[<span class="string">'AverageTemperature'</span>].mean()</span><br></pre></td></tr></table></figure><pre><code>16.727432636247972</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">climate[<span class="string">'dt'</span>] = pd.to_datetime(climate[<span class="string">'dt'</span>])</span><br><span class="line">climate[<span class="string">'year'</span>] = climate[<span class="string">'dt'</span>].map(<span class="keyword">lambda</span> x: x.year)</span><br><span class="line">climate_sub_us = climate.loc[climate[<span class="string">'Country'</span>] == <span class="string">'United States'</span>]</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">climate_sub_us[<span class="string">'century'</span>] = climate_sub_us[<span class="string">'year'</span>].map(<span class="keyword">lambda</span> x : int(x/<span class="number">100</span> + <span class="number">1</span>))</span><br></pre></td></tr></table></figure><pre><code>D:\Anaconda\lib\site-packages\ipykernel_launcher.py:1: SettingWithCopyWarning: A value is trying to be set on a copy of a slice from a DataFrame.Try using .loc[row_indexer,col_indexer] = value insteadSee the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy  &quot;&quot;&quot;Entry point for launching an IPython kernel.</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">climate_sub_us.head()</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>dt</th>      <th>AverageTemperature</th>      <th>AverageTemperatureUncertainty</th>      <th>City</th>      <th>Country</th>      <th>Latitude</th>      <th>Longitude</th>      <th>year</th>      <th>century</th>    </tr>  </thead>  <tbody>    <tr>      <th>47555</th>      <td>1820-01-01</td>      <td>2.101</td>      <td>3.217</td>      <td>Abilene</td>      <td>United States</td>      <td>32.95N</td>      <td>100.53W</td>      <td>1820</td>      <td>19</td>    </tr>    <tr>      <th>47556</th>      <td>1820-02-01</td>      <td>6.926</td>      <td>2.853</td>      <td>Abilene</td>      <td>United States</td>      <td>32.95N</td>      <td>100.53W</td>      <td>1820</td>      <td>19</td>    </tr>    <tr>      <th>47557</th>      <td>1820-03-01</td>      <td>10.767</td>      <td>2.395</td>      <td>Abilene</td>      <td>United States</td>      <td>32.95N</td>      <td>100.53W</td>      <td>1820</td>      <td>19</td>    </tr>    <tr>      <th>47558</th>      <td>1820-04-01</td>      <td>17.989</td>      <td>2.202</td>      <td>Abilene</td>      <td>United States</td>      <td>32.95N</td>      <td>100.53W</td>      <td>1820</td>      <td>19</td>    </tr>    <tr>      <th>47559</th>      <td>1820-05-01</td>      <td>21.809</td>      <td>2.036</td>      <td>Abilene</td>      <td>United States</td>      <td>32.95N</td>      <td>100.53W</td>      <td>1820</td>      <td>19</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">climate_sub_us[<span class="string">'AverageTemperature'</span>].hist(by = climate_sub_us[<span class="string">"century"</span>], sharex = <span class="literal">True</span>, sharey = <span class="literal">True</span>, figsize = (<span class="number">10</span>,<span class="number">10</span>), bins = <span class="number">20</span>);</span><br></pre></td></tr></table></figure><p><img src="output_40_0.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">climate_sub_us.groupby(<span class="string">'century'</span>)[<span class="string">'AverageTemperature'</span>].mean().plot(kind = <span class="string">'line'</span>);</span><br></pre></td></tr></table></figure><p><img src="output_41_0.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">century_changes = climate_sub_us.groupby(<span class="string">'century'</span>)[<span class="string">'AverageTemperature'</span>].mean()</span><br><span class="line">century_changes</span><br></pre></td></tr></table></figure><pre><code>century18    12.07324319    13.66287020    14.38662221    15.197692Name: AverageTemperature, dtype: float64</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">century_changes[<span class="number">21</span>] - century_changes[<span class="number">18</span>]</span><br></pre></td></tr></table></figure><pre><code>3.124449115460754</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">x = climate_sub_us[<span class="string">'year'</span>]</span><br><span class="line">y = climate_sub_us[<span class="string">'AverageTemperature'</span>]</span><br><span class="line">fig, ax = plt.subplots(figsize = (<span class="number">10</span>,<span class="number">5</span>))</span><br><span class="line">ax.scatter(x,y)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p><img src="output_44_0.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">climate_sub_us.groupby(<span class="string">'year'</span>).mean()[<span class="string">'AverageTemperature'</span>].plot();</span><br></pre></td></tr></table></figure><p><img src="output_45_0.png" alt="png"></p><ul><li>使用滑动均值平滑曲线</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">climate_sub_us.groupby(<span class="string">'year'</span>).mean()[<span class="string">'AverageTemperature'</span>].rolling(<span class="number">10</span>).mean().plot();</span><br></pre></td></tr></table></figure><p><img src="output_47_0.png" alt="png"></p><h1 id="定比等级"><a href="#定比等级" class="headerlink" title="定比等级"></a>定比等级</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">fig = plt.figure(figsize = (<span class="number">15</span>,<span class="number">5</span>))</span><br><span class="line">ax = fig.gca()</span><br><span class="line"></span><br><span class="line">salary_ranges.groupby(<span class="string">'Grade'</span>)[[<span class="string">'Biweekly High Rate'</span>]].mean().sort_values(<span class="string">'Biweekly High Rate'</span>,ascending = <span class="literal">False</span>).head(<span class="number">20</span>).plot.bar(</span><br><span class="line">    stacked = <span class="literal">False</span>, ax= ax, color = <span class="string">'darkorange'</span>);</span><br><span class="line">ax.set_title(<span class="string">'Top 20 Grade by mean Biweekly High Rate'</span>);</span><br></pre></td></tr></table></figure><p><img src="output_49_0.png" alt="png"></p><ul><li>比较工资最高的员工与工资最低员工的差距</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sorted_df = salary_ranges.groupby(<span class="string">'Grade'</span>)[[<span class="string">'Biweekly High Rate'</span>]].mean().sort_values(<span class="string">'Biweekly High Rate'</span>,ascending = <span class="literal">False</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sorted_df.iloc[<span class="number">0</span>][<span class="number">0</span>] / sorted_df.iloc[<span class="number">-1</span>][<span class="number">0</span>]</span><br></pre></td></tr></table></figure><pre><code>13.931919540229886</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;特征理解&quot;&gt;&lt;a href=&quot;#特征理解&quot; class=&quot;headerlink&quot; title=&quot;特征理解&quot;&gt;&lt;/a&gt;特征理解&lt;/h1&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;p
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2019/07/12/%E6%96%B0%E5%BB%BA%E6%96%87%E4%BB%B6%E5%A4%B9/Google%20Colab%E4%BD%BF%E7%94%A8%20%E4%B8%80/"/>
    <id>http://yoursite.com/2019/07/12/新建文件夹/Google Colab使用 一/</id>
    <published>2019-07-12T12:38:03.856Z</published>
    <updated>2019-07-12T12:38:04.567Z</updated>
    
    <content type="html"><![CDATA[<ul><li>本地运行<br>借助 Colaboratory，使用 Jupyter 连接到本地运行时</li></ul><ol><li>本机安装Jupyter </li><li>安装并启用jupyter_http_over_ws jupyter 扩展程序</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pip install jupyter_http_over_ws</span><br><span class="line">jupyter serverextension enable --py jupyter_http_over_ws</span><br></pre></td></tr></table></figure><ol start="3"><li>启动服务器并进行身份验证</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">jupyter notebook \</span><br><span class="line">  --NotebookApp.allow_origin=&apos;https://colab.research.google.com&apos; \</span><br><span class="line">  --port=8888 \</span><br><span class="line">  --NotebookApp.port_retries=0</span><br></pre></td></tr></table></figure><p>在 Colaboratory 中，点击“连接”按钮，然后选择“连接到本地运行时…”。在随即显示的对话框中输入上一步中的端口，然后点击“连接”按钮。完成此操作后，您应该就已经连接到本地运行时了。</p><p><a href="https://research.google.com/colaboratory/local-runtimes.html" target="_blank" rel="noopener">Google Colab</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">from google.colab import files </span><br><span class="line">files.upload()</span><br><span class="line">files.download()</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;本地运行&lt;br&gt;借助 Colaboratory，使用 Jupyter 连接到本地运行时&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;本机安装Jupyter &lt;/li&gt;
&lt;li&gt;安装并启用jupyter_http_over_ws jupyter 扩展程序&lt;/li&gt;
&lt;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Tips(2)</title>
    <link href="http://yoursite.com/2019/07/12/%E6%96%B0%E5%BB%BA%E6%96%87%E4%BB%B6%E5%A4%B9/Tips%20(2)/"/>
    <id>http://yoursite.com/2019/07/12/新建文件夹/Tips (2)/</id>
    <published>2019-07-12T12:37:55.075Z</published>
    <updated>2019-07-28T06:43:24.672Z</updated>
    
    <content type="html"><![CDATA[<hr><p>﻿Ubuntu 18.01 重装mysql </p><ul><li><p>删除mysql</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"> #sudo apt autoremove mysql-server</span><br><span class="line"> #sudo apt  remove mysql-common</span><br><span class="line">#dpkg -l |grep ^rc|awk &apos;&#123;print $2&#125;&apos; |sudo xargs dpkg -P</span><br></pre></td></tr></table></figure></li><li><p>安装 mysql</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#sudo apt install mysql-server</span><br><span class="line">#sudo apt install mysql-client</span><br><span class="line">#sudo apt install php5-mysql                   php和mysql连接</span><br></pre></td></tr></table></figure></li><li><p>若提示Package has no installation candidate</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update </span><br><span class="line">sudo apt install upgrade</span><br><span class="line">sudo apt install php5-mysql</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;hr&gt;
&lt;p&gt;﻿Ubuntu 18.01 重装mysql &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;删除mysql&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;l
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2019/07/12/%E6%96%B0%E5%BB%BA%E6%96%87%E4%BB%B6%E5%A4%B9/Google%20colab%20Tips2/"/>
    <id>http://yoursite.com/2019/07/12/新建文件夹/Google colab Tips2/</id>
    <published>2019-07-12T12:37:34.227Z</published>
    <updated>2019-07-12T12:37:35.036Z</updated>
    
    <content type="html"><![CDATA[<ul><li>挂载Drive </li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">from google.colab import drive </span><br><span class="line">drive.mount(&apos;/content/drive&apos;)</span><br></pre></td></tr></table></figure><p>接着打开链接输入授权码</p><ul><li>虚拟机文件下载</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">from google.colab import files </span><br><span class="line">files.download(&apos;file&quot;)        # 同理，file.upload()</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;挂载Drive &lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2019/07/12/%E6%96%B0%E5%BB%BA%E6%96%87%E4%BB%B6%E5%A4%B9/Navicat%20Tips/"/>
    <id>http://yoursite.com/2019/07/12/新建文件夹/Navicat Tips/</id>
    <published>2019-07-12T12:37:25.251Z</published>
    <updated>2019-07-12T12:37:26.163Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Ubuntu18安装Navicat乱码解决办法</strong></p><ul><li>启动 <code>./start_navicat</code> </li></ul><ul><li><p>解决字符乱码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">locale -a </span><br><span class="line">export LANG=zh_CN.utf8</span><br></pre></td></tr></table></figure></li><li><p>软件内仍存在乱码解决办法<br>工具—选项—常规—-界面字体 粘贴为Noto Sans Mono CJK TC Regular，保存并推出重启即可<br><img src="https://img-blog.csdnimg.cn/2019051410353624.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2Vlcnl3aA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;Ubuntu18安装Navicat乱码解决办法&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;启动 &lt;code&gt;./start_navicat&lt;/code&gt; &lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;解决字符乱码&lt;/p&gt;
&lt;figure class=&quot;h
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2019/07/12/%E6%96%B0%E5%BB%BA%E6%96%87%E4%BB%B6%E5%A4%B9/Navicat%20Tips2%20%20%20%20ERROR%201698%20(28000)_%20Access%20denied%20for%20user%20&#39;root&#39;@&#39;localhost&#39;/"/>
    <id>http://yoursite.com/2019/07/12/新建文件夹/Navicat Tips2    ERROR 1698 (28000)_ Access denied for user &#39;root&#39;@&#39;localhost&#39;/</id>
    <published>2019-07-12T12:37:15.179Z</published>
    <updated>2019-07-12T12:37:15.917Z</updated>
    
    <content type="html"><![CDATA[<p><strong>ERROR 1698 (28000): Access denied for user ‘root’@’localhost’</strong><br>转载自<a href="https://blog.csdn.net/qq_39866513/article/details/85957170" target="_blank" rel="noopener">学习</a></p><ul><li>进入以下文件<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/mysql/mysql.conf.d/mysqld.cnf</span><br></pre></td></tr></table></figure></li></ul><p>在如下位置，加入skip-grant-tables<img src="https://img-blog.csdnimg.cn/20190514132350270.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2Vlcnl3aA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>保存并退出。</p><ul><li><p>重启mysql<br><code>service mysql restart</code></p></li><li><p>重新进入mysql</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -u root -p</span><br></pre></td></tr></table></figure></li><li><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">use mysql;</span><br><span class="line">update user set authentication_string=password(”你的密码“）where user=&quot;root&quot;;</span><br><span class="line">flush privileges;</span><br></pre></td></tr></table></figure></li></ul><p><img src="https://img-blog.csdnimg.cn/20190514133708985.png" alt="在这里插入图片描述"></p><ul><li>再次进入mysql</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">service mysql restart</span><br><span class="line">mysql -u root -p</span><br></pre></td></tr></table></figure><ul><li>如下修改</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">use mysql;</span><br><span class="line">select user,plugin from user;</span><br></pre></td></tr></table></figure><p>从图中可以看到在执行了select user,plugin from user后，错误原因是因为plugin root的字段是auth_socket，那我们改掉它为下面的mysql_native_password就行了。<br><img src="https://img-blog.csdnimg.cn/20190514133928827.png" alt="在这里插入图片描述"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">update user set authentication_string=password(&apos;你的密码&apos;),plugin=&apos;mysql_natice_password&apos; where user=&apos;root&apos;;</span><br><span class="line">select user,plugin from user;</span><br></pre></td></tr></table></figure><ul><li>此时有<br><img src="https://img-blog.csdnimg.cn/20190514134218173.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2Vlcnl3aA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li><li>最后注释掉之前的输入</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/mysql/mysql.conf.d/mysqld.cnf</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20190514134303607.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2Vlcnl3aA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><ul><li>此时即可正常进入mysql</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -u root -p</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;ERROR 1698 (28000): Access denied for user ‘root’@’localhost’&lt;/strong&gt;&lt;br&gt;转载自&lt;a href=&quot;https://blog.csdn.net/qq_39866513/article/d
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2019/07/12/%E6%96%B0%E5%BB%BA%E6%96%87%E4%BB%B6%E5%A4%B9/Mysql%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/"/>
    <id>http://yoursite.com/2019/07/12/新建文件夹/Mysql学习记录/</id>
    <published>2019-07-12T12:37:04.427Z</published>
    <updated>2019-07-12T12:37:05.135Z</updated>
    
    <content type="html"><![CDATA[<p> <strong>mysql (内连接，外连接，左连接，右连接，自连接）学习记录</strong></p><ul><li><p>内连接只显示连接过程中交叉的部分</p><p><code>select * from A a inner join B b on a.id = b.id</code></p><ul><li>左连接右连接同属于外连接</li></ul><p><code>select * from A a left join B b on a.id = b.id           -- 显示左表全部记录以及左右表同时存在的记录</code></p><pre><code>`select *  from A a right join B b on a.id = b.id   -- 显示右表全部记录以及左右表同时存在的记录`</code></pre></li><li><p>为现有表添加主键</p><p>  <code>alter table my_contacts</code><br>  <code>add column contact_id int not null auto_increment first,</code><br>  <code>add primary key (contact_id);</code></p></li><li><p>使用CASE表达式来Update<br><code>update movie_table</code><br><code>set category =</code><br><code>case</code><br><code>when drama = &#39;T&#39; then  &#39;drama&#39;</code><br><code>when comedy = &#39;T&#39; then &#39;comedy&#39;</code><br><code>else &#39;misc</code><br><code>end;</code></p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt; &lt;strong&gt;mysql (内连接，外连接，左连接，右连接，自连接）学习记录&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;内连接只显示连接过程中交叉的部分&lt;/p&gt;
&lt;p&gt;&lt;code&gt;select * from A a inner join B b on a.id 
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2019/07/12/%E6%96%B0%E5%BB%BA%E6%96%87%E4%BB%B6%E5%A4%B9/Tips%20(1)/"/>
    <id>http://yoursite.com/2019/07/12/新建文件夹/Tips (1)/</id>
    <published>2019-07-12T12:36:54.955Z</published>
    <updated>2019-07-12T12:36:55.683Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://docs.mongodb.com/manual/reference/method/db.collection.updateOne/c" target="_blank" rel="noopener">pymongo api</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sheet_weather.update_one(&#123;&apos;_id&apos;: item[&apos;_id&apos;]&#125;,</span><br><span class="line">                                 &#123;&apos;$set&apos;: &#123;&apos;HeWeather6.0.daily_forecast.&#123;&#125;.tmp_min&apos;.format(i): int(tmp)&#125;&#125;)</span><br><span class="line"></span><br><span class="line">sheet_weather.find_one_and_delete(&#123;&apos;_id&apos;:item[&apos;_id&apos;]&#125;,&#123;&apos;HeWeather6.0.daily_forecast.&#123;&#125;.tmp_min&apos;&#125;)</span><br></pre></td></tr></table></figure><ul><li><p>{‘_id’: item[‘_id’]}表示需要更新的查询条件，对应_id字段。第二个参数表示要更新的信息，$set 为MongoDB的一个修改器，用于指定一个键并更新键值，若键不存在则创建一个键</p></li><li><p>常用的修改器还有：</p><ol><li>$inc 可以对文档的某个值为数字型的键进行增减操作</li><li>$unset 用于删除键</li><li>$push向文档的某个数组类型的键添加一个数组元素，不过滤重复的数据。添加时，若键存在，则要求键值类型必须为数组；若键不存在，则创建数组类型的键</li></ol></li><li><p><code>{&#39;$set&#39;: {&#39;HeWeather6.0.daily_forecast.{}.tmp_min&#39;.format(i): int(tmp)}}</code></p></li><li><p><code>url = &#39;https://free-api.heweather.net/s6/weather/forecast?location=&#39;+item[1:14]+&#39;&amp;key=aaaaaaaaaaaaa</code>可以写成</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url = &apos;https://free-api.heweather.net/s6/weather/forecast?location=&#123;&#125;&amp;key=aaaa&apos;.format(item[1:14])</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://docs.mongodb.com/manual/reference/method/db.collection.updateOne/c&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;pymongo api&lt;/a&gt;&lt;/p&gt;
&lt;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2019/07/12/%E6%96%B0%E5%BB%BA%E6%96%87%E4%BB%B6%E5%A4%B9/%E7%94%A8API%E7%88%AC%E5%8F%96%E5%A4%A9%E6%B0%94%E9%A2%84%E6%8A%A5%E6%95%B0%E6%8D%AE/"/>
    <id>http://yoursite.com/2019/07/12/新建文件夹/用API爬取天气预报数据/</id>
    <published>2019-07-12T12:36:41.180Z</published>
    <updated>2019-07-12T15:21:31.508Z</updated>
    
    <content type="html"><![CDATA[<h1 id="使用API爬去天气预报数据"><a href="#使用API爬去天气预报数据" class="headerlink" title="使用API爬去天气预报数据"></a><center>使用API爬去天气预报数据</center></h1><hr><h2 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line">import numpy</span><br><span class="line">import re</span><br><span class="line">import time</span><br><span class="line"># 加载pymongo</span><br><span class="line">import pymongo</span><br><span class="line"></span><br><span class="line">client = pymongo.MongoClient(&apos;localhost&apos;,27017)</span><br><span class="line">book_weather = client[&apos;weather&apos;]</span><br><span class="line">sheet_weather = book_weather[&apos;sheet_weather_3&apos;]</span><br><span class="line">url = &apos;https://cdn.heweather.com/china-city-list.txt&apos;</span><br><span class="line">strhtml = requests.get(url)</span><br><span class="line">strhtml.encoding = &apos;utf-8&apos;</span><br><span class="line">data = strhtml.text</span><br><span class="line"></span><br><span class="line">data1 = data.split(&apos;\n&apos;)</span><br><span class="line">for i in range(6):</span><br><span class="line">    data1.remove(data1[0])</span><br><span class="line"></span><br><span class="line">for item in data1:</span><br><span class="line">   # url = &apos;https://free-api.weather.com/v5/forecast?city=&apos;+ item[0:11] +&apos;&amp;key=yourownkey&apos;</span><br><span class="line">   url = &apos;https://free-api.heweather.net/s6/weather/forecast?location=&#123;&#125;&amp;key=yourownkey&apos;.format(item[1:14])</span><br><span class="line">   strhtml = requests.get(url)</span><br><span class="line">   # print(strhtml)</span><br><span class="line">   time.sleep(1)</span><br><span class="line">   dic = strhtml.json()</span><br><span class="line">    # 向表写入一条数据</span><br><span class="line">   sheet_weather.insert_one(dic)</span><br><span class="line"></span><br><span class="line">import  pymongo</span><br><span class="line">client = pymongo.MongoClient(&apos;localhost&apos;,27017)</span><br><span class="line">book_weather = client[&apos;weather&apos;]</span><br><span class="line">sheet_weather = book_weather[&apos;sheet_weather_3&apos;]</span><br></pre></td></tr></table></figure><p>查询未来三天最低气温低于5度的地点</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">import  pymongo</span><br><span class="line">client = pymongo.MongoClient(&apos;localhost&apos;,27017)</span><br><span class="line">book_weather = client[&apos;weather&apos;]</span><br><span class="line">sheet_weather = book_weather[&apos;sheet_weather_3&apos;]</span><br><span class="line"></span><br><span class="line">for item in sheet_weather.find():</span><br><span class="line">    for i in range(3):</span><br><span class="line">       tmp = item[&apos;HeWeather6&apos;][0][&apos;daily_forecast&apos;][i][&apos;tmp_min&apos;]</span><br><span class="line">       sheet_weather.update_one(&#123;&apos;_id&apos;: item[&apos;_id&apos;]&#125;,</span><br><span class="line">                                 &#123;&apos;$set&apos;: &#123;&apos;HeWeather6.0.daily_forecast.&#123;&#125;.tmp_min&apos;.format(i): int(tmp)&#125;&#125;)</span><br><span class="line"></span><br><span class="line">        #sheet_weather.find_one_and_delete(&#123;&apos;_id&apos;:item[&apos;_id&apos;]&#125;,&#123;&apos;HeWeather6.0.daily_forecast.&#123;&#125;.tmp_min&apos;&#125;)</span><br><span class="line"></span><br><span class="line">for item in sheet_weather.find(&#123;&apos;HeWeather6.0.daily_forecast.tmp_min&apos;:&#123;&apos;$gt&apos;:5&#125;&#125;):</span><br><span class="line">    print(item[&apos;HeWeather6&apos;][0][&apos;basic&apos;][&apos;location&apos;])</span><br></pre></td></tr></table></figure><ul><li>$lt, $lte, $gt, $gte 分别表示&lt; , &lt;=, &gt;, &gt;=</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;使用API爬去天气预报数据&quot;&gt;&lt;a href=&quot;#使用API爬去天气预报数据&quot; class=&quot;headerlink&quot; title=&quot;使用API爬去天气预报数据&quot;&gt;&lt;/a&gt;&lt;center&gt;使用API爬去天气预报数据&lt;/center&gt;&lt;/h1&gt;&lt;hr&gt;
&lt;h2 id=
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2019/07/12/%E6%96%B0%E5%BB%BA%E6%96%87%E4%BB%B6%E5%A4%B9/Tips/"/>
    <id>http://yoursite.com/2019/07/12/新建文件夹/Tips/</id>
    <published>2019-07-12T12:36:31.572Z</published>
    <updated>2019-07-12T12:36:32.295Z</updated>
    
    <content type="html"><![CDATA[<p>以癌症预测为例             0:恶性，1:良性</p><ul><li>TP： 真正例，良性被正确预测</li><li>TN：真反例，恶性被正确预测</li><li>FP：假正例，恶性被预测为良性</li><li>FN：假反例，良性被预测为恶性</li></ul><p>Accuracy:准确率<br>（TP+TN）/（TP+TN+FP+FN）<br>Precision:查准率<br>    TP/(TP+FP)<br>Recall:查全率<br>    TP/(TP+FN)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">import numpy as np </span><br><span class="line"></span><br><span class="line">arr = np.arange(12).reshape(3,4)</span><br><span class="line">print(arr)</span><br><span class="line">a = arr[:,::2]</span><br><span class="line">print(a)</span><br><span class="line">b = arr[::1,:]</span><br><span class="line">print(b)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[[ 0  1  2  3]</span><br><span class="line"> [ 4  5  6  7]</span><br><span class="line"> [ 8  9 10 11]]</span><br><span class="line">[[ 0  2]</span><br><span class="line"> [ 4  6]</span><br><span class="line"> [ 8 10]]</span><br><span class="line">[[ 0  1  2  3]</span><br><span class="line"> [ 4  5  6  7]</span><br><span class="line"> [ 8  9 10 11]]</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;以癌症预测为例             0:恶性，1:良性&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;TP： 真正例，良性被正确预测&lt;/li&gt;
&lt;li&gt;TN：真反例，恶性被正确预测&lt;/li&gt;
&lt;li&gt;FP：假正例，恶性被预测为良性&lt;/li&gt;
&lt;li&gt;FN：假反例，良性被预测为恶性&lt;/li&gt;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2019/07/12/%E6%96%B0%E5%BB%BA%E6%96%87%E4%BB%B6%E5%A4%B9/T/"/>
    <id>http://yoursite.com/2019/07/12/新建文件夹/T/</id>
    <published>2019-07-12T12:36:10.659Z</published>
    <updated>2019-07-12T12:36:13.088Z</updated>
    
    <content type="html"><![CDATA[<ul><li><p>operator.itemgetter</p>  <figure class="highlight plain"><figcaption><span>operator </span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sorted = sorted(data,key = operator.itemgetter(n))</span><br><span class="line">---operator.itemgetter(n)返回位置n上的元素</span><br></pre></td></tr></table></figure></li><li><p>zip</p></li><li><p>`np.c_        np.r_</p></li><li><p>np.meshgrid`</p></li><li><p><code>x = np.arange(1,3,1)  y = np.arange(4,8,1)  xx,yy = np.meshgrid(x,y)  print(xx,yy )  print(xx.ravel())  print(yy.ravel())</code></p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">x = np.linespace(1,10,10)</span><br><span class="line">y = np.linespace(2,8,6)</span><br><span class="line">x1,x2 = np.meshgrid(x,y)         #返回list,有两个元素,第一个元素是X轴的取值,第二个元素是Y轴的取值</span><br><span class="line"></span><br><span class="line">》》》[[ 1.  2.  3.  4.  5.  6.  7.  8.  9. 10.]</span><br><span class="line"> [ 1.  2.  3.  4.  5.  6.  7.  8.  9. 10.]</span><br><span class="line"> [ 1.  2.  3.  4.  5.  6.  7.  8.  9. 10.]</span><br><span class="line"> [ 1.  2.  3.  4.  5.  6.  7.  8.  9. 10.]</span><br><span class="line"> [ 1.  2.  3.  4.  5.  6.  7.  8.  9. 10.]</span><br><span class="line"> [ 1.  2.  3.  4.  5.  6.  7.  8.  9. 10.]</span><br><span class="line"> [ 1.  2.  3.  4.  5.  6.  7.  8.  9. 10.]] [[2. 2. 2. 2. 2. 2. 2. 2. 2. 2.]</span><br><span class="line"> [3. 3. 3. 3. 3. 3. 3. 3. 3. 3.]</span><br><span class="line"> [4. 4. 4. 4. 4. 4. 4. 4. 4. 4.]</span><br><span class="line"> [5. 5. 5. 5. 5. 5. 5. 5. 5. 5.]</span><br><span class="line"> [6. 6. 6. 6. 6. 6. 6. 6. 6. 6.]</span><br><span class="line"> [7. 7. 7. 7. 7. 7. 7. 7. 7. 7.]</span><br><span class="line"> [8. 8. 8. 8. 8. 8. 8. 8. 8. 8.]]</span><br></pre></td></tr></table></figure><h1 id="pandas-计算偏度和峰度"><a href="#pandas-计算偏度和峰度" class="headerlink" title="pandas 计算偏度和峰度"></a>pandas 计算偏度和峰度</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">%matplotlib inline</span><br><span class="line">import pandas as pd</span><br><span class="line">from sklearn.datasets import load_iris </span><br><span class="line">import matplotlib.pyplot as plt</span><br><span class="line">import seaborn as sns</span><br><span class="line"></span><br><span class="line">iris = load_iris()</span><br><span class="line">x = iris.data</span><br><span class="line">y = iris.target</span><br><span class="line"></span><br><span class="line">xx.columns</span><br><span class="line"></span><br><span class="line">print(&quot;鸢尾花长度的偏度：%f&quot; % xx[&apos;sepal length (cm)&apos;].skew())</span><br><span class="line">print(&quot;鸢尾花长度的峰度：%f&quot; % xx[&apos;sepal length (cm)&apos;].kurt())</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;&lt;p&gt;operator.itemgetter&lt;/p&gt;
  &lt;figure class=&quot;highlight plain&quot;&gt;&lt;figcaption&gt;&lt;span&gt;operator &lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;g
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>MNIST数据集的读取</title>
    <link href="http://yoursite.com/2019/07/12/%E6%96%B0%E5%BB%BA%E6%96%87%E4%BB%B6%E5%A4%B9/MNIST%E6%95%B0%E6%8D%AE%E9%9B%86%E7%9A%84%E8%AF%BB%E5%8F%96/"/>
    <id>http://yoursite.com/2019/07/12/新建文件夹/MNIST数据集的读取/</id>
    <published>2019-07-12T03:38:04.442Z</published>
    <updated>2019-07-12T08:27:18.471Z</updated>
    
    <content type="html"><![CDATA[<ul><li>下载MNIST 数据集，并保存到home/wang/文档/Linux_python/ML/Python_ml test/MNIST_data/mldata文件夹下<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">from sklearn.datasets import fetch_mldata</span><br><span class="line"></span><br><span class="line">mnist = fetch_mldata(&apos;mnist-original&apos;, data_home = &apos;/home/wang/文档/Linux_python/ML/Python_ml test/MNIST_data&apos;)</span><br><span class="line"></span><br><span class="line">X = mnist[&apos;data&apos;]</span><br><span class="line">y = mnist[&apos;target&apos;]</span><br><span class="line">print(X)</span><br><span class="line">print(y)</span><br><span class="line"></span><br><span class="line">from sklearn.model_selection import train_test_split</span><br><span class="line"></span><br><span class="line">X_train,X_test,y_train,y_test = train_test_split(X,y)</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;下载MNIST 数据集，并保存到home/wang/文档/Linux_python/ML/Python_ml test/MNIST_data/mldata文件夹下&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td cla
      
    
    </summary>
    
      <category term="Machine Learning" scheme="http://yoursite.com/categories/Machine-Learning/"/>
    
    
      <category term="ML" scheme="http://yoursite.com/tags/ML/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2019/07/12/%E6%96%B0%E5%BB%BA%E6%96%87%E4%BB%B6%E5%A4%B9/hello-world/"/>
    <id>http://yoursite.com/2019/07/12/新建文件夹/hello-world/</id>
    <published>2019-07-12T02:06:54.964Z</published>
    <updated>2019-07-12T02:06:54.964Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
